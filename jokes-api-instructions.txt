- Create DynamoDB "jokes-api-makerlab"
    - jokes_id as string

- Create Lambda Function to pull and insert a joke
    - "retrieve-insert-joke-function" is the name of function
    - Use Nodejs 8.10
    - Create new role from template
    - Create new role associated with function
        - joke-api-lambda-role
            - Give it DynamoDBFullAccess (note that poilcy for fine grain access is attached)
            - Give AWSLambdaBasicExecutionRole (Must attach to give ability to write to CloudWatch)
    - Copy and paste code provided in Makerlab
    - Ensure that students set envriornment varible for table name.
    - Show them how to configure a test in Lambda

- Create a Lambda function to list all of the jokes.
    - Create new lambda function named "list-jokes-makerlab-function".

- Create a CloudWatch rule to trigger every 5 mins.

- Create API Gateway
    - New API
    - Type in Name and Description
    - Create a resource that can be called by it's sperate URL path, API Gateway can have man URL resources.
    - Resource will be called jokes
    - Create an access method under our resource
    - Lets create a GET method that list all of the Jokes in the DynamoDB table
    - Allow access to call Lambda function
    - Must deploy API before using
    - When trying to access API we will get an Missing Authentication Token
        - This is becuase we did not specficy any access method for the root URL
    - Must access url/<StageName>/jokes

- Create a Lambda function to list all of the jokes
    - Create new lambda function named "list-jokes-makerlab-function"

- Create a Lambda function to get a random joke
    - Create a new lambda function named "get-random-joke-function"

- Create a resource (GET) to get a radom joke
- Create a resource (PUT) to trigger insert lambda function
    - Use build in API Gateway Testing functionilty
- Create a resource (GET) to get a joke by its jokes_id 


